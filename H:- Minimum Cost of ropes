class Solution
{
    public:
    //Function to return the minimum cost of connecting the ropes.
    long long minCost(long long arr[], long long n) {
       
        priority_queue<long long,vector<long long>,greater<long long>>mixh;
        long long int c=0;
        for(long long i=0;i<n;i++){
            
            mixh.push(arr[i]);
        }
        while(mixh.size()>=2){
            long long int first=mixh.top();
            mixh.pop();
            
            long long int second = mixh.top();
            mixh.pop();
            c=c+first+second;
            mixh.push(first+second);
        }
        return c;
    }
};


// { Driver Code Starts.

int main() {
    long long t;
    cin >> t;
    while (t--) {
        long long n;
        cin >> n;
        long long i, a[n];
        for (i = 0; i < n; i++) {
            cin >> a[i];
        }
        Solution ob;
        cout << ob.minCost(a, n) << endl;
    }
    return 0;
}
